/* Verilog netlist generated by SCUBA Diamond (64-bit) 3.11.1.441 */
/* Module Version: 5.2 */
/* C:\lscc\diamond\3.11_x64\ispfpga\bin\nt64\scuba.exe -w -n Memory_Shift -lang verilog -synth lse -bus_exp 7 -bb -arch xo3c00f -type shiftreg -width 16 -depth 16 -mode 0 -pipe_final_output  */
/* Mon Dec 16 11:50:06 2019 */


`timescale 1 ns / 1 ps
module Memory_Shift (Din, Clock, ClockEn, Reset, Q)/* synthesis NGD_DRC_MASK=1 */;
    input wire [15:0] Din;
    input wire Clock;
    input wire ClockEn;
    input wire Reset;
    output wire [15:0] Q;

    wire Reset_inv;
    wire scuba_vlo;
    wire scuba_vhi;
    wire ishreg_addr_w0;
    wire ishreg_addr_w1;
    wire sreg_0_ctr_1_ci;
    wire ishreg_addr_w2;
    wire ishreg_addr_w3;
    wire co1;
    wire co0;
    wire Q15_ffin;
    wire Q14_ffin;
    wire Q13_ffin;
    wire Q12_ffin;
    wire Q11_ffin;
    wire Q10_ffin;
    wire Q9_ffin;
    wire Q8_ffin;
    wire Q7_ffin;
    wire Q6_ffin;
    wire Q5_ffin;
    wire Q4_ffin;
    wire Q3_ffin;
    wire Q2_ffin;
    wire Q1_ffin;
    wire Q0_ffin;
    wire dec0_wre3;
    wire shreg_addr_w3;
    wire shreg_addr_w2;
    wire shreg_addr_w1;
    wire shreg_addr_w0;

    INV INV_0 (.A(Reset), .Z(Reset_inv));

    defparam LUT4_0.initval =  16'h8000 ;
    ROM16X1A LUT4_0 (.AD3(Reset_inv), .AD2(ClockEn), .AD1(scuba_vhi), .AD0(scuba_vhi), 
        .DO0(dec0_wre3));

    FD1P3DX FF_19 (.D(ishreg_addr_w0), .SP(ClockEn), .CK(Clock), .CD(Reset), 
        .Q(shreg_addr_w0))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_18 (.D(ishreg_addr_w1), .SP(ClockEn), .CK(Clock), .CD(Reset), 
        .Q(shreg_addr_w1))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_17 (.D(ishreg_addr_w2), .SP(ClockEn), .CK(Clock), .CD(Reset), 
        .Q(shreg_addr_w2))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_16 (.D(ishreg_addr_w3), .SP(ClockEn), .CK(Clock), .CD(Reset), 
        .Q(shreg_addr_w3))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_15 (.D(Q15_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(Q[15]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_14 (.D(Q14_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(Q[14]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_13 (.D(Q13_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(Q[13]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_12 (.D(Q12_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(Q[12]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_11 (.D(Q11_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(Q[11]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_10 (.D(Q10_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(Q[10]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_9 (.D(Q9_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(Q[9]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_8 (.D(Q8_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(Q[8]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_7 (.D(Q7_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(Q[7]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_6 (.D(Q6_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(Q[6]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_5 (.D(Q5_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(Q[5]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_4 (.D(Q4_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(Q[4]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_3 (.D(Q3_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(Q[3]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_2 (.D(Q2_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(Q[2]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_1 (.D(Q1_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(Q[1]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_0 (.D(Q0_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(Q[0]))
             /* synthesis GSR="ENABLED" */;

    VLO scuba_vlo_inst (.Z(scuba_vlo));

    VHI scuba_vhi_inst (.Z(scuba_vhi));

    FADD2B sreg_0_ctr_1_cia (.A0(scuba_vlo), .A1(scuba_vhi), .B0(scuba_vlo), 
        .B1(scuba_vhi), .CI(scuba_vlo), .COUT(sreg_0_ctr_1_ci), .S0(), .S1());

    CU2 sreg_0_ctr_1_0 (.CI(sreg_0_ctr_1_ci), .PC0(shreg_addr_w0), .PC1(shreg_addr_w1), 
        .CO(co0), .NC0(ishreg_addr_w0), .NC1(ishreg_addr_w1));

    CU2 sreg_0_ctr_1_1 (.CI(co0), .PC0(shreg_addr_w2), .PC1(shreg_addr_w3), 
        .CO(co1), .NC0(ishreg_addr_w2), .NC1(ishreg_addr_w3));

    defparam sram_1_0_0.initval = "0x0000000000000000" ;
    SPR16X4C sram_1_0_0 (.DI0(Din[12]), .DI1(Din[13]), .DI2(Din[14]), .DI3(Din[15]), 
        .CK(Clock), .WRE(dec0_wre3), .AD0(shreg_addr_w0), .AD1(shreg_addr_w1), 
        .AD2(shreg_addr_w2), .AD3(shreg_addr_w3), .DO0(Q12_ffin), .DO1(Q13_ffin), 
        .DO2(Q14_ffin), .DO3(Q15_ffin))
             /* synthesis MEM_INIT_FILE="(0-15)(0-3)" */
             /* synthesis MEM_LPC_FILE="Memory_Shift.lpc" */
             /* synthesis COMP="sram_1_0_0" */;

    defparam sram_1_0_1.initval = "0x0000000000000000" ;
    SPR16X4C sram_1_0_1 (.DI0(Din[8]), .DI1(Din[9]), .DI2(Din[10]), .DI3(Din[11]), 
        .CK(Clock), .WRE(dec0_wre3), .AD0(shreg_addr_w0), .AD1(shreg_addr_w1), 
        .AD2(shreg_addr_w2), .AD3(shreg_addr_w3), .DO0(Q8_ffin), .DO1(Q9_ffin), 
        .DO2(Q10_ffin), .DO3(Q11_ffin))
             /* synthesis MEM_INIT_FILE="(0-15)(4-7)" */
             /* synthesis MEM_LPC_FILE="Memory_Shift.lpc" */
             /* synthesis COMP="sram_1_0_1" */;

    defparam sram_1_0_2.initval = "0x0000000000000000" ;
    SPR16X4C sram_1_0_2 (.DI0(Din[4]), .DI1(Din[5]), .DI2(Din[6]), .DI3(Din[7]), 
        .CK(Clock), .WRE(dec0_wre3), .AD0(shreg_addr_w0), .AD1(shreg_addr_w1), 
        .AD2(shreg_addr_w2), .AD3(shreg_addr_w3), .DO0(Q4_ffin), .DO1(Q5_ffin), 
        .DO2(Q6_ffin), .DO3(Q7_ffin))
             /* synthesis MEM_INIT_FILE="(0-15)(8-11)" */
             /* synthesis MEM_LPC_FILE="Memory_Shift.lpc" */
             /* synthesis COMP="sram_1_0_2" */;

    defparam sram_1_0_3.initval = "0x0000000000000000" ;
    SPR16X4C sram_1_0_3 (.DI0(Din[0]), .DI1(Din[1]), .DI2(Din[2]), .DI3(Din[3]), 
        .CK(Clock), .WRE(dec0_wre3), .AD0(shreg_addr_w0), .AD1(shreg_addr_w1), 
        .AD2(shreg_addr_w2), .AD3(shreg_addr_w3), .DO0(Q0_ffin), .DO1(Q1_ffin), 
        .DO2(Q2_ffin), .DO3(Q3_ffin))
             /* synthesis MEM_INIT_FILE="(0-15)(12-15)" */
             /* synthesis MEM_LPC_FILE="Memory_Shift.lpc" */
             /* synthesis COMP="sram_1_0_3" */;



    // exemplar begin
    // exemplar attribute FF_19 GSR ENABLED
    // exemplar attribute FF_18 GSR ENABLED
    // exemplar attribute FF_17 GSR ENABLED
    // exemplar attribute FF_16 GSR ENABLED
    // exemplar attribute FF_15 GSR ENABLED
    // exemplar attribute FF_14 GSR ENABLED
    // exemplar attribute FF_13 GSR ENABLED
    // exemplar attribute FF_12 GSR ENABLED
    // exemplar attribute FF_11 GSR ENABLED
    // exemplar attribute FF_10 GSR ENABLED
    // exemplar attribute FF_9 GSR ENABLED
    // exemplar attribute FF_8 GSR ENABLED
    // exemplar attribute FF_7 GSR ENABLED
    // exemplar attribute FF_6 GSR ENABLED
    // exemplar attribute FF_5 GSR ENABLED
    // exemplar attribute FF_4 GSR ENABLED
    // exemplar attribute FF_3 GSR ENABLED
    // exemplar attribute FF_2 GSR ENABLED
    // exemplar attribute FF_1 GSR ENABLED
    // exemplar attribute FF_0 GSR ENABLED
    // exemplar attribute sram_1_0_0 MEM_INIT_FILE (0-15)(0-3)
    // exemplar attribute sram_1_0_0 MEM_LPC_FILE Memory_Shift.lpc
    // exemplar attribute sram_1_0_0 COMP sram_1_0_0
    // exemplar attribute sram_1_0_1 MEM_INIT_FILE (0-15)(4-7)
    // exemplar attribute sram_1_0_1 MEM_LPC_FILE Memory_Shift.lpc
    // exemplar attribute sram_1_0_1 COMP sram_1_0_1
    // exemplar attribute sram_1_0_2 MEM_INIT_FILE (0-15)(8-11)
    // exemplar attribute sram_1_0_2 MEM_LPC_FILE Memory_Shift.lpc
    // exemplar attribute sram_1_0_2 COMP sram_1_0_2
    // exemplar attribute sram_1_0_3 MEM_INIT_FILE (0-15)(12-15)
    // exemplar attribute sram_1_0_3 MEM_LPC_FILE Memory_Shift.lpc
    // exemplar attribute sram_1_0_3 COMP sram_1_0_3
    // exemplar end

endmodule
